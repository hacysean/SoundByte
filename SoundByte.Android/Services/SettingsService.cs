using System;
using Android.App;
using Android.Content;

namespace SoundByte.Android.Services
{
    /// <summary>
    ///     This class handles all the settings within the app
    /// </summary>
    public class SettingsService
    {
        #region Static Class Setup

        private static readonly Lazy<SettingsService> InstanceHolder =
            new Lazy<SettingsService>(() => new SettingsService());

        public static SettingsService Instance => InstanceHolder.Value;
        #endregion

        #region Constant Keys
        private const string AppIdKey = "SoundByte.Android.AppKey";
        #endregion

        #region Getter and Setters
        /// <summary>
        ///     App ID Generated by the server.
        /// </summary>
        public string AppId
        {
            get => ReadSettingsValue(AppIdKey) as string;
            set => SaveSettingsValue(AppIdKey, value);
        }
        #endregion

        #region Settings Helpers
        private object ReadSettingsValue(string key)
        {
            var settings = Application.Context.GetSharedPreferences("SoundByte.Android", FileCreationMode.Private);
            var value = settings.GetString(key, null);

            return value;
        }

        private void SaveSettingsValue(string key, object value)
        {
            // Open the settings file to edit
            var settings = Application.Context.GetSharedPreferences("SoundByte.Android", FileCreationMode.Private);
            var settingsEditor = settings.Edit();

            // Save the setting
            settingsEditor.PutString(key, value.ToString());
            settingsEditor.Commit();
        }
        #endregion
    }
}